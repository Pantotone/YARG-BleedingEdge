name: âœ… Checks for releases

on: 
  workflow_call:
    inputs:
      repositoryAuthor:
        description: "Repository Author"
        type: string
      repositoryName:
        description: "Repository Name"
        type: string
      repositoryBranch:
        description: "Repository Branch"
        type: string
    outputs:
      macBuild:
        description: "If Mac build should occour"
        value: ${{ jobs.check.outputs.macBuild }}
      windowsBuild:
        description: "If Windows build should occour"
        value: ${{ jobs.check.outputs.windowsBuild }}
      linuxBuild:
        description: "If Linux build should occour"
        value: ${{ jobs.check.outputs.linuxBuild }}
      tagName:
        description: "Name to be used on release tag"
        value: ${{ jobs.check.outputs.tagName }}
      latestSHA:
        description: "Latest SHA checked from branch"
        value: ${{ jobs.check.outputs.latestSHA }}
      messageBody: 
        description: "Message to be used on the body"
        value: ${{ jobs.check.outputs.messageBody }}

jobs:
  check:
    name: "Check for releases"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Setup Node"
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: npm

      - name: "Install dependencies"
        run: npm i

      - name: "Check for latest release / Save information to output"
        id: check-latest-output
        run: node methods/CheckLatestRelease.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_AUTHOR: ${{ inputs.repositoryAuthor }}
          REPOSITORY_NAME: ${{ inputs.repositoryName }}
          REPOSITORY_BRANCH: ${{ inputs.repositoryBranch }}
          BLEEDINGEDGE_REPOSITORYAUTHOR: ${{ github.repository_owner }}
          BLEEDINGEDGE_REPOSITORYNAME: ${{ github.event.repository.name }}
    outputs: 
      macBuild: ${{ steps.check-latest-output.outputs.macBuild }}
      windowsBuild: ${{ steps.check-latest-output.outputs.windowsBuild }}
      linuxBuild: ${{ steps.check-latest-output.outputs.linuxBuild }}
      latestSHA: ${{ steps.check-latest-output.outputs.latestSHA }}
      tagName: ${{ steps.check-latest-output.outputs.tagName }}
      messageBody: ${{ steps.check-latest-output.outputs.messageBody }}